version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: cine_db
    environment:
      POSTGRES_DB: cine_reservas
      POSTGRES_USER: cinema_user
      POSTGRES_PASSWORD: cinema_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cine_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinema_user -d cine_reservas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cine_backend
    environment:
      DATABASE_URL: postgresql://cinema_user:cinema_pass@db:5432/cine_reservas
      SECRET_KEY: tu_clave_secreta_jwt_aqui_cambiar_en_produccion
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 10
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - cine_network
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cine_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - cine_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  cine_network:
    driver: bridge